name: Publish to PowerShell Gallery

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.15.0
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Required for creating releases

jobs:
  # First, run the CI tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        shell: pwsh
        run: |
          Write-Host "Running tests before publish..."
          Install-Module -Name Pester -RequiredVersion 5.7.1 -Force -SkipPublisherCheck
          $result = Invoke-Pester -Path ./tests/ -PassThru
          
          if ($result.FailedCount -gt 0) {
              Write-Error "‚ùå Tests failed! Cannot publish."
              exit 1
          }
          
          Write-Host "‚úÖ All tests passed!"

  # Then publish only if tests pass
  publish:
    runs-on: ubuntu-latest
    needs: test  # Wait for tests to pass
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PowerShell
        shell: pwsh
        run: |
          $PSVersionTable

      - name: Get module version
        id: get_version
        shell: pwsh
        run: |
          $manifest = Test-ModuleManifest -Path ./src/EmojiTools.psd1
          $version = $manifest.Version.ToString()
          Write-Host "Module version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Publish to PowerShell Gallery
        shell: pwsh
        run: |
          Write-Host "Publishing EmojiTools to PowerShell Gallery..."
          
          # Create a proper module structure for publishing
          $publishDir = "./publish"
          $moduleDir = "$publishDir/EmojiTools"
          
          # Create the module directory
          New-Item -ItemType Directory -Path $moduleDir -Force | Out-Null
          
          # Copy module files to the publish directory
          Copy-Item -Path ./src/EmojiTools.psd1 -Destination $moduleDir -Force
          Copy-Item -Path ./src/EmojiTools.psm1 -Destination $moduleDir -Force
          Copy-Item -Path ./src/data -Destination $moduleDir -Recurse -Force
          Copy-Item -Path ./src/functions -Destination $moduleDir -Recurse -Force
          
          # Verify the module manifest
          $manifestPath = "$moduleDir/EmojiTools.psd1"
          $manifest = Test-ModuleManifest -Path $manifestPath
          Write-Host "Module: $($manifest.Name) v$($manifest.Version)"
          
          # Check if this version is already published
          Write-Host "Checking if version $($manifest.Version) is already published..."
          $publishedModule = Find-Module -Name EmojiTools -RequiredVersion $manifest.Version -ErrorAction SilentlyContinue
          
          if ($publishedModule) {
              Write-Host "‚è≠Ô∏è  Version $($manifest.Version) is already published to PowerShell Gallery. Skipping publish."
              Write-Host "   Published on: $($publishedModule.PublishedDate)"
              exit 0
          }
          
          # Publish to PowerShell Gallery
          try {
              Write-Host "üì¶ Publishing version $($manifest.Version) to PowerShell Gallery..."
              Publish-Module -Path $moduleDir -NuGetApiKey '${{ secrets.PSGALLERY_API_KEY }}' -Verbose
              Write-Host "‚úÖ Successfully published to PowerShell Gallery!"
          }
          catch {
              Write-Error "Failed to publish: $_"
              exit 1
          }

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Published to PowerShell Gallery
            
            Install with: `Install-Module -Name EmojiTools`
          draft: false
          prerelease: false
